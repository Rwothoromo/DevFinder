buildscript {
    repositories {
    }

    dependencies {
    }
}

plugins {
    id("com.android.application")
    id 'kotlin-android'
    id 'jacoco'
    id("com.google.gms.google-services")
    alias(libs.plugins.compose.compiler)
}

repositories {
    mavenCentral()
}

apply from: rootProject.file('quality/quality.gradle')
apply from: rootProject.file('app/jacoco.gradle')

jacoco {
    toolVersion = "${rootProject.jacocoVersion}"
    reportsDirectory = file("${buildDir}/reports")
}

tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
    useJUnitPlatform() // the kotlin-test library automatically includes JUnit 5 as a dependency.
}

android {
    namespace = "com.rwothoromo.devfinder"
    compileSdkVersion 35
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.rwothoromo.devfinder"
        minSdkVersion 21
        targetSdk 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "../keystores/keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
        debug {
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }

    productFlavors {
        mock {
//            applicationIdSuffix = ".mock"
            dimension "default"
        }
        prod {

        }
    }

    sourceSets {
        mock {
            java.srcDirs('src/mock/java')
        }
        prod {
            java.srcDirs('src/prod/java')
        }
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true // Include all classes for coverage, unit tests are optimized for coverage reporting
            }
        }

        unitTests.returnDefaultValues = true

        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }

    lint {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintLayout}"
    implementation "com.android.support:design:${rootProject.supportVersion}"
    implementation "com.android.support:support-v4:${rootProject.supportVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.supportVersion}"
    testImplementation "junit:junit:${rootProject.jUnit}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.testRunner}"
    androidTestImplementation "com.android.support.test:rules:${rootProject.testRunner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${rootProject.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${rootProject.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${rootProject.espressoVersion}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofitVersion}"
    implementation "com.github.bumptech.glide:glide:${rootProject.glideVersion}"
    implementation "com.android.support.test.espresso.idling:idling-concurrent:${rootProject.espressoVersion}"
    implementation "com.squareup.okhttp3:mockwebserver:${rootProject.mockWebServer}"
    implementation "org.mockito:mockito-core:${rootProject.mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${rootProject.mockitoVersion}"
    implementation(platform("com.google.firebase:firebase-bom:$firebaseBom"))
    implementation("com.google.firebase:firebase-perf")
    implementation("com.google.firebase:firebase-analytics")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation("androidx.compose.runtime:runtime:$composeVersion")
}
